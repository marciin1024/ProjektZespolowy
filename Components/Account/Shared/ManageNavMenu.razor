@using Microsoft.AspNetCore.Identity

@inject SignInManager<User> SignInManager
@inject NavigationManager NavigationManager
@rendermode InteractiveServer
<DxTabs @bind-ActiveTabIndex="ActiveTabIndex">
    <DxTab TabIconCssClass="tab-icon icon-profile" Text="Profile" Click="@(() => NavigationManager.NavigateTo(@UrlGenerator.GetUrl("Account/Manage", ToggledSidebar)))">
    </DxTab>
    <DxTab TabIconCssClass="tab-icon icon-email" Text="Email" Click="@(() => NavigationManager.NavigateTo(@UrlGenerator.GetUrl("Account/Manage/Email", ToggledSidebar)))">
    </DxTab>
    <DxTab TabIconCssClass="tab-icon icon-password" Text="Password" Click="@(() => NavigationManager.NavigateTo(@UrlGenerator.GetUrl("Account/Manage/ChangePassword", ToggledSidebar)))">
    </DxTab>
    @if(hasExternalLogins) {
    <DxTab TabIconCssClass="tab-icon icon-external" Text="External logins" Click="@(() => NavigationManager.NavigateTo(@UrlGenerator.GetUrl("Account/Manage/ExternalLogins", ToggledSidebar)))">
    </DxTab>
    }
    <DxTab TabIconCssClass="tab-icon icon-two-factor" Text="Two-factor authentication" Click="@(() => NavigationManager.NavigateTo(@UrlGenerator.GetUrl("Account/Manage/TwoFactorAuthentication", ToggledSidebar)))">
    </DxTab>
    <DxTab TabIconCssClass="tab-icon icon-personal" Text="Personal Data" Click="@(() => NavigationManager.NavigateTo(@UrlGenerator.GetUrl("Account/Manage/PersonalData", ToggledSidebar)))">
    </DxTab>
</DxTabs>

@code {
    [SupplyParameterFromQuery(Name = UrlGenerator.ToggleSidebarName)]
    public bool ToggledSidebar { get; set; } 

    private bool hasExternalLogins;

    int ActiveTabIndex { get; set; } = 0;

    protected override async Task OnInitializedAsync() {
        hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
        if(NavigationManager.Uri.Contains("Account/Manage/Email")) ActiveTabIndex = 1;
        if(NavigationManager.Uri.Contains("Account/Manage/ChangePassword")) ActiveTabIndex = 2;
        if(NavigationManager.Uri.Contains("Account/Manage/ExternalLogins")) ActiveTabIndex = 3;
        if(NavigationManager.Uri.Contains("Account/Manage/TwoFactorAuthentication")) ActiveTabIndex = hasExternalLogins ? 4 : 3;
        if(NavigationManager.Uri.Contains("Account/Manage/PersonalData")) ActiveTabIndex = hasExternalLogins ? 5 : 4;
    }
}